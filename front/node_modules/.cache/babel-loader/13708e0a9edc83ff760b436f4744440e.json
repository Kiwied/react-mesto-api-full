{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\mesto-react\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport '../index.css';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport Login from \"./Login\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport { api } from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport { HeaderContext, headers } from \"../contexts/HeaderContext\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [headerContext, setHeaderContext] = React.useState('login');\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function handleHeaderChange(evt) {\n    setHeaderContext(evt.target.value);\n    console.log(evt.target.value);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsInfoTooltipOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser(newUserInfo) {\n    api.setNewUserInfo(newUserInfo).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    api.setNewAvatar({\n      avatar\n    }).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    (isLiked ? api.dislike(card._id) : api.like(card._id)).then(likedCard => {\n      const newCards = cards.map(currentCard => currentCard._id === card._id ? likedCard : currentCard);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.delete(card._id).then(() => {\n      const newCards = cards.filter(currentCard => currentCard._id !== card._id);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleAddPlaceSubmit(newCardInfo) {\n    api.addNewCard(newCardInfo).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderContext.Provider, {\n    value: headers[headerContext],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    onHeaderChange: setHeaderContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    onHeaderChange: setHeaderContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/\",\n    loggedIn: loggedIn,\n    component: Main,\n    onEditProfile: handleEditProfileClick,\n    onAddPlace: handleAddPlaceClick,\n    onEditAvatar: handleEditAvatarClick,\n    onCardClick: handleCardClick,\n    cards: cards,\n    onCardLike: handleCardLike,\n    onCardDelete: handleCardDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoTooltip, {\n    isOpen: isInfoTooltipOpen,\n    onClose: closeAllPopups,\n    loggedIn: loggedIn,\n    name: \"infoTooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    onAddPlace: handleAddPlaceSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onAvatarUpdate: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    name: \"delete\",\n    title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n    button: \"\\u0414\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    isOpen: isImagePopupOpen,\n    onClose: closeAllPopups,\n    card: selectedCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["C:/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","Login","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","api","CurrentUserContext","AddPlacePopup","Route","Switch","withRouter","ProtectedRoute","Register","InfoTooltip","HeaderContext","headers","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","loggedIn","setLoggedIn","headerContext","setHeaderContext","useEffect","getUserInfo","then","res","catch","err","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleHeaderChange","evt","target","value","closeAllPopups","handleUpdateUser","newUserInfo","setNewUserInfo","data","handleUpdateAvatar","avatar","setNewAvatar","cards","setCards","getInitialCards","handleCardLike","isLiked","likes","some","i","_id","dislike","like","likedCard","newCards","map","currentCard","handleCardDelete","delete","filter","handleAddPlaceSubmit","newCardInfo","addNewCard","newCard"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../index.css';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport Login from \"./Login\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport { api } from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport { HeaderContext, headers } from \"../contexts/HeaderContext\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [headerContext, setHeaderContext] = React.useState('login');\n\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then(res => {\n        setCurrentUser(res);\n      })\n      .catch(err => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }, [])\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function handleHeaderChange(evt) {\n    setHeaderContext(evt.target.value);\n    console.log(evt.target.value);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsInfoTooltipOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser(newUserInfo) {\n    api.setNewUserInfo(newUserInfo)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(`Ошибка: ${err}`)\n      });\n  }\n\n  function handleUpdateAvatar({avatar}) {\n    api.setNewAvatar({avatar})\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(`Ошибка: ${err}`)\n      });\n  }\n\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api.getInitialCards()\n      .then(res => {\n        setCards(res);\n      })\n      .catch(err => {\n        console.log(`Ошибка: ${err}`)\n      });\n  }, [])\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    (isLiked ? api.dislike(card._id) : api.like(card._id))\n      .then((likedCard) => {\n        const newCards = cards.map((currentCard) =>\n          currentCard._id === card._id ? likedCard : currentCard\n        );\n        setCards(newCards);\n      })\n      .catch(err => {\n        console.log(`Ошибка: ${err}`)\n      });\n  }\n\n  function handleCardDelete(card) {\n    api.delete(card._id)\n      .then(() => {\n        const newCards = cards.filter(currentCard =>\n          currentCard._id !== card._id\n        );\n        setCards(newCards);\n      })\n      .catch(err => {\n        console.log(`Ошибка: ${err}`)\n      });\n  }\n\n  function handleAddPlaceSubmit(newCardInfo) {\n    api.addNewCard(newCardInfo)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(`Ошибка: ${err}`)\n      });\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"content\">\n          <HeaderContext.Provider value={headers[headerContext]}>\n            <Header/>\n          </HeaderContext.Provider>\n\n          <Switch>\n            <Route path=\"/sign-up\">\n              <Register onHeaderChange={setHeaderContext} />\n            </Route>\n\n            <Route path=\"/sign-in\">\n              <Login onHeaderChange={setHeaderContext} />\n            </Route>\n\n            <ProtectedRoute exact path=\"/\"\n                            loggedIn={loggedIn}\n                            component={Main}\n                            onEditProfile={handleEditProfileClick}\n                            onAddPlace={handleAddPlaceClick}\n                            onEditAvatar={handleEditAvatarClick}\n                            onCardClick={handleCardClick}\n                            cards={cards}\n                            onCardLike={handleCardLike}\n                            onCardDelete={handleCardDelete}\n            >\n            </ProtectedRoute>\n          </Switch>\n\n          <Footer/>\n\n          <InfoTooltip\n            isOpen={isInfoTooltipOpen}\n            onClose={closeAllPopups}\n            loggedIn={loggedIn}\n            name=\"infoTooltip\"\n          />\n\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onAvatarUpdate={handleUpdateAvatar}\n          />\n\n          <PopupWithForm\n            name=\"delete\"\n            title=\"Вы уверены?\"\n            button=\"Да\"\n          />\n\n          <ImagePopup\n            isOpen={isImagePopupOpen}\n            onClose={closeAllPopups}\n            card={selectedCard}\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}