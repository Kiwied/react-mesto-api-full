{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\mesto-react\\\\src\\\\components\\\\InfoTooltip.js\";\nimport React from \"react\";\nimport okPath from \"../images/icon-ok.svg\";\nimport crossPath from \"../images/icon-cross.svg\";\nexport default function InfoTooltip(props) {\n  React.useEffect(() => {\n    function handleOverlayClose(evt) {\n      if (evt.target.classList.contains('popup_opened')) {\n        props.onClose(evt);\n      }\n    }\n\n    document.getElementById(`popup__${props.name}`).addEventListener('click', handleOverlayClose);\n    return () => {\n      document.getElementById(`popup__${props.name}`).removeEventListener('click', handleOverlayClose);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: `popup ${props.isOpen && 'popup_opened'}`,\n    id: \"popup__infoTooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoTooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"infoTooltip__icon\",\n    src: props.loggedIn ? okPath : crossPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"infoTooltip__caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, props.loggedIn ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так!\\n' + 'Попробуйте ещё раз.'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.onClose,\n    type: \"button\",\n    className: \"popup__close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/dev/mesto-react/src/components/InfoTooltip.js"],"names":["React","InfoTooltip","props","useEffect","handleOverlayClose","evt","target","classList","contains","onClose","document","getElementById","name","addEventListener","removeEventListener","isOpen","loggedIn","okPath","crossPath"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAIA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzCF,EAAAA,KAAK,CAACG,SAAN,CAAgB,MAAM;AACpB,aAASC,kBAAT,CAA4BC,GAA5B,EAAiC;AAC/B,UAAIA,GAAG,CAACC,MAAJ,CAAWC,SAAX,CAAqBC,QAArB,CAA8B,cAA9B,CAAJ,EAAmD;AACjDN,QAAAA,KAAK,CAACO,OAAN,CAAcJ,GAAd;AACD;AACF;;AAEDK,IAAAA,QAAQ,CACLC,cADH,CACmB,UAAST,KAAK,CAACU,IAAK,EADvC,EAEGC,gBAFH,CAEoB,OAFpB,EAE6BT,kBAF7B;AAIA,WAAM,MAAM;AACVM,MAAAA,QAAQ,CACLC,cADH,CACmB,UAAST,KAAK,CAACU,IAAK,EADvC,EAEGE,mBAFH,CAEuB,OAFvB,EAEgCV,kBAFhC;AAGD,KAJD;AAKD,GAhBD,EAgBG,EAhBH;AAkBA,sBACE;AAAS,IAAA,SAAS,EAAG,SAAQF,KAAK,CAACa,MAAN,IAAgB,cAAe,EAA5D;AACS,IAAA,EAAE,EAAC,oBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AACK,IAAA,GAAG,EAAEb,KAAK,CAACc,QAAN,GACDC,MADC,GAEDC,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,CAACc,QAAN,GACG,gCADH,GAEG,2BACF,qBAJJ,CAPF,eAcE;AAAQ,IAAA,OAAO,EAAEd,KAAK,CAACO,OAAvB;AACQ,IAAA,IAAI,EAAC,QADb;AAEQ,IAAA,SAAS,EAAC,cAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CAHF,CADF;AA0BD","sourcesContent":["import React from \"react\";\nimport okPath from \"../images/icon-ok.svg\"\nimport crossPath from \"../images/icon-cross.svg\";\n\nexport default function InfoTooltip(props) {\n  React.useEffect(() => {\n    function handleOverlayClose(evt) {\n      if (evt.target.classList.contains('popup_opened')) {\n        props.onClose(evt);\n      }\n    }\n\n    document\n      .getElementById(`popup__${props.name}`)\n      .addEventListener('click', handleOverlayClose)\n\n    return() => {\n      document\n        .getElementById(`popup__${props.name}`)\n        .removeEventListener('click', handleOverlayClose)\n    }\n  }, [])\n\n  return (\n    <section className={`popup ${props.isOpen && 'popup_opened'}`}\n             id=\"popup__infoTooltip\"\n    >\n      <div className=\"infoTooltip\">\n        <img className=\"infoTooltip__icon\"\n             src={props.loggedIn\n               ? okPath\n               : crossPath\n             }\n        />\n        <p className=\"infoTooltip__caption\">\n          {props.loggedIn\n            ? 'Вы успешно зарегистрировались!'\n            : 'Что-то пошло не так!\\n' +\n            'Попробуйте ещё раз.'\n          }\n        </p>\n        <button onClick={props.onClose}\n                type=\"button\"\n                className=\"popup__close\"\n        >\n        </button>\n      </div>\n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}