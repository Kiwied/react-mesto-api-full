{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\mesto-react\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport '../index.css';\nimport Header from \"./header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport { api } from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser(newUserInfo) {\n    api.setNewUserInfo(newUserInfo).then(data => {\n      console.log('123');\n      setCurrentUser(data);\n      closeAllPopups();\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    onEditProfile: handleEditProfileClick,\n    onAddPlace: handleAddPlaceClick,\n    onEditAvatar: handleEditAvatarClick,\n    onCardClick: handleCardClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    name: \"profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    button: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    children: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name-input\",\n      name: \"name\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      className: \"form__input form__input_name\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      pattern: \"^[A-Za-z\\u0410-\\u042F\\u0430-\\u044F\\u0401\\u0451 \\\\-]+$\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form__input-error\",\n      id: \"name-input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description-input\",\n      name: \"about\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      className: \"form__input form__input_description\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      pattern: \"^[A-Za-z\\u0410-\\u042F\\u0430-\\u044F\\u0401\\u0451, \\\\-]+$\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form__input-error\",\n      id: \"description-input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    name: \"new-card\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    button: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    children: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"place-input\",\n      name: \"name\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      className: \"form__input form__input_name\",\n      minLength: \"2\",\n      maxLength: \"30\",\n      pattern: \"^[A-Za-z\\u0410-\\u042F\\u0430-\\u044F\\u0401\\u0451 \\\\-]+$\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form__input-error\",\n      id: \"place-input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      id: \"link-input\",\n      name: \"link\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      className: \"form__input form__input_link\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form__input-error\",\n      id: \"link-input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    name: \"avatar\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    button: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    children: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      id: \"avatar-link-input\",\n      name: \"avatar\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      className: \"form__input form__input_link\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form__input-error\",\n      id: \"avatar-link-input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    name: \"delete\",\n    title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n    button: \"\\u0414\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    isOpen: isImagePopupOpen,\n    onClose: closeAllPopups,\n    card: selectedCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","api","CurrentUserContext","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","useEffect","getUserInfo","then","res","catch","err","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","newUserInfo","setNewUserInfo","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../index.css';\nimport Header from \"./header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport { api } from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then(res => {\n        setCurrentUser(res);\n      })\n      .catch(err => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }, [])\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser(newUserInfo) {\n    api.setNewUserInfo(newUserInfo)\n      .then((data) => {\n        console.log('123');\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"content\">\n          <Header/>\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n          />\n          <Footer/>\n\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          <PopupWithForm\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            name=\"profile\"\n            title=\"Редактировать профиль\"\n            button=\"Сохранить\"\n            children={(\n              <>\n                <input\n                  type=\"text\"\n                  id=\"name-input\"\n                  name=\"name\"\n                  placeholder=\"Имя\"\n                  className=\"form__input form__input_name\"\n                  minLength=\"2\" maxLength=\"40\"\n                  pattern=\"^[A-Za-zА-Яа-яЁё \\-]+$\"\n                  required\n                />\n                <span className=\"form__input-error\"\n                      id=\"name-input-error\">\n                </span>\n                <input\n                  type=\"text\"\n                  id=\"description-input\"\n                  name=\"about\"\n                  placeholder=\"Описание\"\n                  className=\"form__input form__input_description\"\n                  minLength=\"2\" maxLength=\"200\"\n                  pattern=\"^[A-Za-zА-Яа-яЁё, \\-]+$\"\n                  required\n                />\n                <span className=\"form__input-error\"\n                      id=\"description-input-error\">\n                </span>\n              </>\n            )}\n          />\n\n          <PopupWithForm\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            name=\"new-card\"\n            title=\"Новое место\"\n            button=\"Создать\"\n            children={(\n              <>\n                <input\n                  type=\"text\"\n                  id=\"place-input\"\n                  name=\"name\"\n                  placeholder=\"Название\"\n                  className=\"form__input form__input_name\"\n                  minLength=\"2\" maxLength=\"30\"\n                  pattern=\"^[A-Za-zА-Яа-яЁё \\-]+$\"\n                  required\n                />\n                <span className=\"form__input-error\"\n                      id=\"place-input-error\">\n                </span>\n                <input\n                  type=\"url\"\n                  id=\"link-input\"\n                  name=\"link\"\n                  placeholder=\"Ссылка на картинку\"\n                  className=\"form__input form__input_link\"\n                  required\n                />\n                <span className=\"form__input-error\"\n                      id=\"link-input-error\">\n                </span>\n              </>\n            )}\n          />\n\n          <PopupWithForm\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            name=\"avatar\"\n            title=\"Обновить аватар\"\n            button=\"Сохранить\"\n            children={(\n              <>\n                <input type=\"url\"\n                       id=\"avatar-link-input\"\n                       name=\"avatar\"\n                       placeholder=\"Ссылка на картинку\"\n                       className=\"form__input form__input_link\"\n                       required\n                />\n                <span className=\"form__input-error\"\n                      id=\"avatar-link-input-error\">\n                </span>\n              </>\n            )}\n          />\n\n          <PopupWithForm\n            name=\"delete\"\n            title=\"Вы уверены?\"\n            button=\"Да\"\n          />\n\n          <ImagePopup\n            isOpen={isImagePopupOpen}\n            onClose={closeAllPopups}\n            card={selectedCard}\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}