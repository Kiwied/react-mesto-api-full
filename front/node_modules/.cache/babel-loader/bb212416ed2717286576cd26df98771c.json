{"ast":null,"code":"import _classCallCheck from\"C:\\\\dev\\\\mesto-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\dev\\\\mesto-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";var Auth=/*#__PURE__*/function(){function Auth(){_classCallCheck(this,Auth);this._baseUrl='https://auth.nomoreparties.co';}_createClass(Auth,[{key:\"register\",value:function register(pass,email){return fetch(\"\".concat(this._baseUrl,\"/signup\"),{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({\"password\":pass,\"email\":email})}).then(function(res){console.log(res);try{if(res.status===201){return res.json();}}catch(err){return err;}}).then(function(res){return res;}).catch(function(err){return console.log(err);});}},{key:\"singIn\",value:function singIn(pass,email){return fetch(\"\".concat(this._baseUrl,\"/signin\"),{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({\"password\":pass,\"email\":email})}).then(function(res){return res.json();}).then(function(data){if(data.token){localStorage.setItem('token',data.token);return data;}else{return;}}).catch(function(err){return console.log(err);});}},{key:\"getContent\",value:function getContent(token){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'GET',headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(function(res){return res.json();}).catch(function(err){return console.log(err);});}}]);return Auth;}();export var auth=new Auth();","map":{"version":3,"sources":["C:/dev/mesto-react/src/utils/Auth.js"],"names":["Auth","_baseUrl","pass","email","fetch","method","headers","body","JSON","stringify","then","res","console","log","status","json","err","catch","data","token","localStorage","setItem","auth"],"mappings":"iSAAMA,CAAAA,I,yBACJ,eAAc,4BACZ,KAAKC,QAAL,CAAgB,+BAAhB,CACD,C,2DAEQC,I,CAAMC,K,CAAO,CACpB,MAAOC,CAAAA,KAAK,WAAI,KAAKH,QAAT,YAA4B,CACtCI,MAAM,CAAE,MAD8B,CAEtCC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAF6B,CAGtCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnB,WAAYP,IADO,CAEnB,QAASC,KAFU,CAAf,CAHgC,CAA5B,CAAL,CAQJO,IARI,CAQC,SAACC,GAAD,CAAS,CACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,GAAI,CACF,GAAIA,GAAG,CAACG,MAAJ,GAAe,GAAnB,CAAuB,CACrB,MAAOH,CAAAA,GAAG,CAACI,IAAJ,EAAP,CACD,CACF,CAAC,MAAMC,GAAN,CAAU,CACV,MAAQA,CAAAA,GAAR,CACD,CACF,CAjBI,EAkBJN,IAlBI,CAkBC,SAAAC,GAAG,CAAI,CACX,MAAOA,CAAAA,GAAP,CACD,CApBI,EAqBJM,KArBI,CAqBE,SAAAD,GAAG,QAAIJ,CAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAAJ,EArBL,CAAP,CAsBD,C,sCAEMd,I,CAAMC,K,CAAO,CAClB,MAAOC,CAAAA,KAAK,WAAI,KAAKH,QAAT,YAA4B,CACtCI,MAAM,CAAE,MAD8B,CAEtCC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAF6B,CAGtCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnB,WAAYP,IADO,CAEnB,QAASC,KAFU,CAAf,CAHgC,CAA5B,CAAL,CAQJO,IARI,CAQC,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACI,IAAJ,EAAJ,EARJ,EASJL,IATI,CASC,SAAAQ,IAAI,CAAI,CACZ,GAAIA,IAAI,CAACC,KAAT,CAAgB,CACdC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BH,IAAI,CAACC,KAAnC,EACA,MAAOD,CAAAA,IAAP,CACD,CAHD,IAGO,CACL,OACD,CACF,CAhBI,EAiBJD,KAjBI,CAiBE,SAAAD,GAAG,QAAIJ,CAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAAJ,EAjBL,CAAP,CAkBD,C,8CAEUG,K,CAAO,CAChB,MAAOf,CAAAA,KAAK,WAAI,KAAKH,QAAT,cAA8B,CACxCI,MAAM,CAAE,KADgC,CAExCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,iCAA2Ba,KAA3B,CAFO,CAF+B,CAA9B,CAAL,CAOJT,IAPI,CAOC,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACI,IAAJ,EAAJ,EAPJ,EAQJE,KARI,CAQE,SAAAD,GAAG,QAAIJ,CAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAAJ,EARL,CAAP,CASD,C,oBAGH,MAAO,IAAMM,CAAAA,IAAI,CAAG,GAAItB,CAAAA,IAAJ,EAAb","sourcesContent":["class Auth {\n  constructor() {\n    this._baseUrl = 'https://auth.nomoreparties.co'\n  }\n\n  register(pass, email) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        \"password\": pass,\n        \"email\": email\n      })\n    })\n      .then((res) => {\n        console.log(res);\n        try {\n          if (res.status === 201){\n            return res.json();\n          }\n        } catch(err){\n          return (err);\n        }\n      })\n      .then(res => {\n        return res;\n      })\n      .catch(err => console.log(err))\n  }\n\n  singIn(pass, email) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        \"password\": pass,\n        \"email\": email\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.token) {\n          localStorage.setItem('token', data.token);\n          return data;\n        } else {\n          return;\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  getContent(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    })\n      .then(res => res.json())\n      .catch(err => console.log(err))\n  }\n}\n\nexport const auth = new Auth();\n"]},"metadata":{},"sourceType":"module"}